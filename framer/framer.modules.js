require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"global":[function(require,module,exports){
exports.initGlobal = function() {
  exports.initBack();
  hop.Global.visible = true;
  return hop.globalFooter.states.add({
    hide: {
      y: 1400
    }
  });
};

exports.initBack = function() {
  return hop.globalBack.on(Events.Click, function(event, layer) {
    window.shopNowMod.hideShopNow();
    window.shoppingListMod.hideShoppingList();
    window.recipeListMod.hideRecipeList();
    return window.mainMenuMod.showMenu();
  });
};



},{}],"mainMenu":[function(require,module,exports){
exports.initMenu = function() {
  var count, footer, i, option;
  hop.MainMenu.y = 0;
  hop.MainMenu.states.add('hide', {
    opacity: 0
  });
  hop.MainMenu.states.add('show', {
    opacity: 1
  });
  hop.MainMenu.bringToFront();
  hop.Global.bringToFront();
  for (count = i = 1; i <= 8; count = ++i) {
    option = hop["option" + count];
    option.states.add("show", {
      y: option.y,
      opacity: 1
    });
    option.states.add("hide", {
      y: 1200,
      opacity: 0
    });
    option.states.switchInstant('hide');
  }
  footer = hop["footer"];
  footer.states.add('hide', {
    y: 1400,
    opacity: 0
  });
  footer.states.add('show', {
    y: footer.y,
    opacity: 1
  });
  footer.states.switchInstant('hide');
  return exports.showMenu();
};

exports.showMenu = function() {
  var count, fn, i, j;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["option" + count].states.switchInstant('hide');
  }
  hop.MainMenu.states["switch"]('show');
  fn = function(count) {
    return Utils.delay(count * 0.1, function() {
      return hop["option" + count].states["switch"]('show');
    });
  };
  for (count = j = 1; j <= 8; count = ++j) {
    fn(count);
  }
  Utils.delay(8 * 0.1, function() {
    return hop.footer.states["switch"]('show');
  });
  return hop.MainMenu.bringToFront();
};

exports.hideMenu = function() {
  var count, fn, i;
  fn = function(count) {
    return Utils.delay(count * 0.01, function() {
      return hop["option" + count].states["switch"]('hide');
    });
  };
  for (count = i = 1; i <= 8; count = ++i) {
    fn(count);
  }
  return Utils.delay(8 * 0.01, function() {
    hop.footer.states["switch"]('hide');
    return hop.MainMenu.states["switch"]('hide');
  });
};

hop.option2.on(Events.Click, function(event, layer) {
  window.shopNowMod.showShopNow();
  return exports.hideMenu();
});

hop.option3.on(Events.Click, function(event, layer) {
  window.shoppingListMod.showShoppingList();
  return exports.hideMenu();
});

hop.option6.on(Events.Click, function(event, layer) {
  window.recipeListMod.showRecipeList();
  return exports.hideMenu();
});



},{}],"recipeList":[function(require,module,exports){
exports.initRecipeList = function() {
  var count, i, item, results;
  hop.recipeListBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.recipeListBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['recipeItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1024.,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showRecipeList = function() {
  var count, i;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["recipeItem" + count].states.switchInstant('hide');
  }
  hop.RecipeList.placeBehind(hop.MainMenu);
  hop.RecipeList.visible = true;
  hop.recipeListBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  return Utils.delay(0.2, function() {
    var j, results;
    results = [];
    for (count = j = 1; j <= 5; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["recipeItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
};

exports.hideRecipeList = function() {
  hop.recipeListBody.states["switch"]('hide');
  return hop.globalFooter.states["switch"]('hide');
};



},{}],"shopNow":[function(require,module,exports){
exports.initShopNow = function() {
  var count, i, item, results;
  hop.shopNowBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.map.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1,
      curve: 'ease-out'
    }
  });
  hop.map.states.switchInstant('hide');
  hop.shopNowBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['shopItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1200.,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showShopNow = function() {
  var count, i;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["shopItem" + count].states.switchInstant('hide');
  }
  hop.map.states.switchInstant('hide');
  hop.ShopNow.placeBehind(hop.MainMenu);
  hop.ShopNow.visible = true;
  hop.shopNowBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  return Utils.delay(0.2, function() {
    var j, results;
    hop.map.states["switch"]('show');
    results = [];
    for (count = j = 1; j <= 5; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["shopItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
};

exports.hideShopNow = function() {
  hop.globalFooter.states["switch"]('hide');
  return hop.shopNowBody.states["switch"]('hide');
};



},{}],"shoppingList":[function(require,module,exports){
exports.initShoppingList = function() {
  var count, i, item, results;
  hop.shoppingListBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.shoppingListBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['listItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1200,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showShoppingList = function() {
  var count, i;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["listItem" + count].states.switchInstant('hide');
  }
  hop.ShoppingList.placeBehind(hop.MainMenu);
  hop.ShoppingList.visible = true;
  hop.shoppingListBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  return Utils.delay(0.2, function() {
    var j, results;
    results = [];
    for (count = j = 1; j <= 5; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["listItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
};

exports.hideShoppingList = function() {
  hop.globalFooter.states["switch"]('hide');
  return hop.shoppingListBody.states["switch"]('hide');
};



},{}]},{},[])
//# sourceMappingURL=data:application/json;base64,
