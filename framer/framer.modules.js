require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"global":[function(require,module,exports){
exports.initGlobal = function() {
  exports.initBack();
  hop.Global.visible = true;
  return hop.globalFooter.states.add({
    hide: {
      y: 1400
    }
  });
};

exports.initBack = function() {
  return hop.globalBack.on(Events.Click, function(event, layer) {
    window.shopNowMod.hideShopNow();
    window.shoppingListMod.hideShoppingList();
    window.recipeListMod.hideRecipeList();
    window.nutritionMod.hideNutritionList();
    window.schezwanMod.hideSchezwanTofu();
    return window.mainMenuMod.showMenu();
  });
};


},{}],"mainMenu":[function(require,module,exports){
exports.initMenu = function() {
  var count, footer, i, option;
  hop.MainMenu.y = 0;
  hop.MainMenu.states.add('hide', {
    opacity: 0
  });
  hop.MainMenu.states.add('show', {
    opacity: 1
  });
  hop.MainMenu.bringToFront();
  hop.Global.bringToFront();
  for (count = i = 1; i <= 8; count = ++i) {
    option = hop["option" + count];
    option.states.add("show", {
      y: option.y,
      opacity: 1
    });
    option.states.add("hide", {
      y: 1200,
      opacity: 0
    });
    option.states.switchInstant('hide');
  }
  footer = hop["footer"];
  footer.states.add('hide', {
    y: 1400,
    opacity: 0
  });
  footer.states.add('show', {
    y: footer.y,
    opacity: 1
  });
  footer.states.switchInstant('hide');
  return exports.showMenu();
};

exports.showMenu = function() {
  var count, fn, i;
  hop.MainMenu.states["switch"]('show');
  fn = function(count) {
    return Utils.delay(count * 0.1, function() {
      return hop["option" + count].states["switch"]('show');
    });
  };
  for (count = i = 1; i <= 8; count = ++i) {
    fn(count);
  }
  Utils.delay(8 * 0.1, function() {
    return hop.footer.states["switch"]('show');
  });
  return hop.MainMenu.bringToFront();
};

exports.hideMenu = function() {
  var count, fn, i;
  fn = function(count) {
    return Utils.delay(count * 0.01, function() {
      return hop["option" + count].states["switch"]('hide');
    });
  };
  for (count = i = 1; i <= 8; count = ++i) {
    fn(count);
  }
  return Utils.delay(8 * 0.01, function() {
    hop.footer.states["switch"]('hide');
    return hop.MainMenu.states["switch"]('hide');
  });
};

hop.option2.on(Events.Click, function(event, layer) {
  window.shopNowMod.showShopNow();
  return exports.hideMenu();
});

hop.option3.on(Events.Click, function(event, layer) {
  window.shoppingListMod.showShoppingList();
  return exports.hideMenu();
});

hop.option6.on(Events.Click, function(event, layer) {
  window.recipeListMod.showRecipeList();
  return exports.hideMenu();
});

hop.option7.on(Events.Click, function(event, layer) {
  window.nutritionMod.showNutritionList();
  return exports.hideMenu();
});


},{}],"nutrition":[function(require,module,exports){
exports.initNutritionList = function() {
  var count, i, item, results;
  hop.nutritionBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.nutritionBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 2; count = ++i) {
    item = hop['nutritionItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1024.,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showNutritionList = function() {
  var count, i;
  for (count = i = 1; i <= 2; count = ++i) {
    hop["nutritionItem" + count].states.switchInstant('hide');
  }
  hop.Nutrition.placeBehind(hop.MainMenu);
  hop.Nutrition.visible = true;
  hop.nutritionBody.states["switch"]('show');
  Utils.delay(0.2, function() {
    var j, results;
    results = [];
    for (count = j = 1; j <= 2; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["nutritionItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
  return Utils.delay(0.6, function() {
    return hop.globalFooter.states["switch"]('default');
  });
};

exports.hideNutritionList = function() {
  hop.nutritionBody.states["switch"]('hide');
  return hop.globalFooter.states["switch"]('hide');
};


},{}],"recipeList":[function(require,module,exports){
exports.initRecipeList = function() {
  var count, i, item, results;
  hop.recipeListBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.recipeListBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['recipeItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1024.,
      opacity: 0
    });
    item.states.switchInstant('hide');
    results.push(item.states.animationOptions = {
      time: 0.5
    });
  }
  return results;
};

exports.showRecipeList = function() {
  var count, i;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["recipeItem" + count].states.switchInstant('hide');
  }
  hop.RecipeList.placeBehind(hop.MainMenu);
  hop.RecipeList.visible = true;
  hop.recipeListBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  return Utils.delay(0.2, function() {
    var j, results;
    results = [];
    for (count = j = 1; j <= 5; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["recipeItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
};

exports.hideRecipeList = function() {
  hop.recipeListBody.states["switch"]('hide');
  return hop.globalFooter.states["switch"]('hide');
};

hop.recipeItem3.on(Events.Click, function(event, layer) {
  var animationTime, recipeLayer;
  hop.SchezwanTofu.visible = true;
  recipeLayer = hop.schezwanBody;
  recipeLayer = hop.RecipeCoverImg.copy();
  recipeLayer.superLayer = hop.RecipeList;
  recipeLayer.width = hop.recipeImg.width;
  recipeLayer.height = hop.recipeImg.height;
  recipeLayer.x = hop.recipeImg.screenFrame.x;
  recipeLayer.y = hop.recipeImg.screenFrame.y;
  animationTime = 0.3;
  recipeLayer.states.add({
    zoomIn: {
      width: 640,
      height: 391,
      x: 0,
      y: 115,
      originX: 0,
      originY: 1
    }
  });
  recipeLayer.states.animationOptions = {
    time: animationTime,
    curve: "ease-out"
  };
  recipeLayer.states["switch"]('zoomIn');
  hop.recipeListBody.states["switch"]('hide');
  hop.RecipeList.backgroundColor = "#FFFFFF";
  return recipeLayer.on(Events.AnimationEnd, function() {
    hop.RecipeList.visible = false;
    window.schezwanMod.showSchezwanTofu();
    return recipeLayer.destroy();
  });
});


},{}],"schezwanTofu":[function(require,module,exports){
var parallaxCover;

exports.initSchezwanTofu = function() {
  var scroll;
  hop.SchezwanTofu.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.schezwanBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.ingredients.states.add({
    hide: {
      opacity: 0,
      y: 1000
    },
    show: {
      opacity: 1,
      y: hop.ingredients.y
    }
  });
  hop.schezwanSummary.states.add({
    hide: {
      opacity: 0,
      scaleY: 0
    },
    show: {
      opacity: 1,
      scaleY: 1,
      originY: 1
    }
  });
  hop.schezwanSummary.states.animationOptions = {
    curve: "ease-out",
    time: 0.3
  };
  hop.ingredients.states.switchInstant('hide');
  hop.schezwanBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  hop.schezwanSummary.states.switchInstant('hide');
  scroll = ScrollComponent.wrap(hop.schezwanBody);
  scroll.scrollFrame = Screen.frame;
  scroll.contentInset = {
    top: 0,
    left: 0,
    bottom: -200
  };
  scroll.scrollHorizontal = false;
  scroll.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  return scroll.on(Events.Move, function() {
    return parallaxCover(scroll.scrollY);
  });
};

exports.showSchezwanTofu = function() {
  hop.SchezwanTofu.states.switchInstant('show');
  hop.ingredients.states["switch"]('show');
  return hop.schezwanSummary.states["switch"]('show');
};

parallaxCover = function(y) {
  hop.RecipeCoverImg.y = Utils.modulate(y, [0, 390], [0, 100], true);
  return hop.RecipeCoverImg.blur = Utils.modulate(y, [0, 400], [0, 20], true);
};

exports.hideSchezwanTofu = function() {
  hop.SchezwanTofu.states["switch"]('hide');
  hop.ingredients.states["switch"]('hide');
  hop.schezwanSummary.states["switch"]('hide');
  return hop.globalFooter.states["switch"]('hide');
};


},{}],"shopNow":[function(require,module,exports){
exports.initShopNow = function() {
  var count, i, item, results;
  hop.shopNowBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.map.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1,
      curve: 'ease-out'
    }
  });
  hop.map.states.switchInstant('hide');
  hop.shopNowBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['shopItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1200.,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showShopNow = function() {
  var count, i;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["shopItem" + count].states.switchInstant('hide');
  }
  hop.map.states.switchInstant('hide');
  hop.ShopNow.placeBehind(hop.MainMenu);
  hop.ShopNow.visible = true;
  hop.shopNowBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  return Utils.delay(0.2, function() {
    var j, results;
    hop.map.states["switch"]('show');
    results = [];
    for (count = j = 1; j <= 5; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["shopItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
};

exports.hideShopNow = function() {
  hop.globalFooter.states["switch"]('hide');
  return hop.shopNowBody.states["switch"]('hide');
};


},{}],"shoppingList":[function(require,module,exports){
exports.initShoppingList = function() {
  var count, i, item, results;
  hop.shoppingListBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.shoppingListBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['listItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: 1200,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showShoppingList = function() {
  var count, i;
  for (count = i = 1; i <= 5; count = ++i) {
    hop["listItem" + count].states.switchInstant('hide');
  }
  hop.ShoppingList.placeBehind(hop.MainMenu);
  hop.ShoppingList.visible = true;
  hop.shoppingListBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  return Utils.delay(0.2, function() {
    var j, results;
    results = [];
    for (count = j = 1; j <= 5; count = ++j) {
      results.push((function(count) {
        return Utils.delay(count * 0.1, function() {
          return hop["listItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
};

exports.hideShoppingList = function() {
  hop.globalFooter.states["switch"]('hide');
  return hop.shoppingListBody.states["switch"]('hide');
};


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvVXNlcnMvYXJhdmluZHJhdmkvRGVza3RvcC9BcmF2aW5kL1dvcmtzcGFjZS9Ib3AvSGktZmkgUHJvdG90eXBlcy9Ib3AuZnJhbWVyL21vZHVsZXMvZ2xvYmFsLmNvZmZlZSIsIi9Vc2Vycy9hcmF2aW5kcmF2aS9EZXNrdG9wL0FyYXZpbmQvV29ya3NwYWNlL0hvcC9IaS1maSBQcm90b3R5cGVzL0hvcC5mcmFtZXIvbW9kdWxlcy9tYWluTWVudS5jb2ZmZWUiLCIvVXNlcnMvYXJhdmluZHJhdmkvRGVza3RvcC9BcmF2aW5kL1dvcmtzcGFjZS9Ib3AvSGktZmkgUHJvdG90eXBlcy9Ib3AuZnJhbWVyL21vZHVsZXMvbnV0cml0aW9uLmNvZmZlZSIsIi9Vc2Vycy9hcmF2aW5kcmF2aS9EZXNrdG9wL0FyYXZpbmQvV29ya3NwYWNlL0hvcC9IaS1maSBQcm90b3R5cGVzL0hvcC5mcmFtZXIvbW9kdWxlcy9yZWNpcGVMaXN0LmNvZmZlZSIsIi9Vc2Vycy9hcmF2aW5kcmF2aS9EZXNrdG9wL0FyYXZpbmQvV29ya3NwYWNlL0hvcC9IaS1maSBQcm90b3R5cGVzL0hvcC5mcmFtZXIvbW9kdWxlcy9zY2hlendhblRvZnUuY29mZmVlIiwiL1VzZXJzL2FyYXZpbmRyYXZpL0Rlc2t0b3AvQXJhdmluZC9Xb3Jrc3BhY2UvSG9wL0hpLWZpIFByb3RvdHlwZXMvSG9wLmZyYW1lci9tb2R1bGVzL3Nob3BOb3cuY29mZmVlIiwiL1VzZXJzL2FyYXZpbmRyYXZpL0Rlc2t0b3AvQXJhdmluZC9Xb3Jrc3BhY2UvSG9wL0hpLWZpIFByb3RvdHlwZXMvSG9wLmZyYW1lci9tb2R1bGVzL3Nob3BwaW5nTGlzdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxPQUFPLENBQUMsVUFBUixHQUFxQixTQUFBO0VBQ3BCLE9BQU8sQ0FBQyxRQUFSLENB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LGtDQUFiO0lBQ0MsR0FBSSxDQUFBLFVBQUEsR0FBVyxLQUFYLENBQWlCLENBQUMsTUFBTSxDQUFDLGFBQTdCLENBQTJDLE1BQTNDO0FBREQ7RUFFQSxHQUFHLENBQUMsWUFBWSxDQUFDLFdBQWpCLENBQTZCLEdBQUcsQ0FBQyxRQUFqQztFQUNBLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBakIsR0FBMkI7RUFDM0IsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxRQUFELENBQTNCLENBQW1DLE1BQW5DO0VBQ0EsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsUUFBRCxDQUF2QixDQUErQixTQUEvQjtTQUNBLEtBQUssQ0FBQyxLQUFOLENBQVksR0FBWixFQUFpQixTQUFBO0FBQ2hCLFFBQUE7QUFBQTtTQUFhLGtDQUFiO21CQUNJLENBQUEsU0FBQyxLQUFEO2VBQ0EsS0FBSyxDQUFDLEtBQU4sQ0FBWSxLQUFBLEdBQVEsR0FBcEIsRUFBeUIsU0FBQTtpQkFDdkIsR0FBSSxDQUFBLFVBQUEsR0FBVyxLQUFYLENBQWlCLENBQUMsTUFBTSxDQUFDLFFBQUQsQ0FBNUIsQ0FBb0MsTUFBcEM7UUFEdUIsQ0FBekI7TUFEQSxDQUFBLENBQUgsQ0FBSSxLQUFKO0FBREQ7O0VBRGdCLENBQWpCO0FBUDBCOztBQWEzQixPQUFPLENBQUMsZ0JBQVIsR0FBMkIsU0FBQTtFQUMxQixHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFELENBQXZCLENBQStCLE1BQS9CO1NBQ0EsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxRQUFELENBQTNCLENBQW1DLE1BQW5DO0FBRjBCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImV4cG9ydHMuaW5pdEdsb2JhbCA9IC0+XG5cdGV4cG9ydHMuaW5pdEJhY2soKVxuXHRob3AuR2xvYmFsLnZpc2libGUgPSB0cnVlXG5cdGhvcC5nbG9iYWxGb290ZXIuc3RhdGVzLmFkZFxuXHRcdGhpZGU6XG5cdFx0XHR5OiAxNDAwXG5cbmV4cG9ydHMuaW5pdEJhY2sgPSAtPlxuXHRob3AuZ2xvYmFsQmFjay5vbiBFdmVudHMuQ2xpY2ssIChldmVudCxsYXllcikgLT5cblx0XHR3aW5kb3cuc2hvcE5vd01vZC5oaWRlU2hvcE5vdygpXG5cdFx0d2luZG93LnNob3BwaW5nTGlzdE1vZC5oaWRlU2hvcHBpbmdMaXN0KClcblx0XHR3aW5kb3cucmVjaXBlTGlzdE1vZC5oaWRlUmVjaXBlTGlzdCgpXG5cdFx0d2luZG93Lm51dHJpdGlvbk1vZC5oaWRlTnV0cml0aW9uTGlzdCgpXG5cdFx0d2luZG93LnNjaGV6d2FuTW9kLmhpZGVTY2hlendhblRvZnUoKVxuXHRcdHdpbmRvdy5tYWluTWVudU1vZC5zaG93TWVudSgpXG5cbiIsIlxuXG4jIEdsb2JhbCBGdW5jdGlvbnNcbmV4cG9ydHMuaW5pdE1lbnUgPSAtPlxuXHQjc3RhdGVzIGZvciBNYWluTWVudVxuXHRob3AuTWFpbk1lbnUueSA9IDBcblx0aG9wLk1haW5NZW51LnN0YXRlcy5hZGQoJ2hpZGUnLHtvcGFjaXR5OjB9KVxuXHRob3AuTWFpbk1lbnUuc3RhdGVzLmFkZCgnc2hvdycse29wYWNpdHk6MX0pXG5cdGhvcC5NYWluTWVudS5icmluZ1RvRnJvbnQoKVx0XG5cdGhvcC5HbG9iYWwuYnJpbmdUb0Zyb250KClcblx0I1N0YXRlcyBmb3IgbWVudSBvcHRpb25zXG5cdGZvciBjb3VudCBpbiBbMS4uOF1cblx0XHRvcHRpb24gPSBob3BbXCJvcHRpb25cIiArIGNvdW50XVxuXHRcdG9wdGlvbi5zdGF0ZXMuYWRkKFwic2hvd1wiLHt5Om9wdGlvbi55LCBvcGFjaXR5OjF9KVxuXHRcdG9wdGlvbi5zdGF0ZXMuYWRkKFwiaGlkZVwiLHt5OjEyMDAsIG9wYWNpdHk6MH0pXG5cdFx0I29wdGlvbi5zdGF0ZXMuYW5pbWF0aW9uT3B0aW9ucyA9IHRpbWU6MC4zXG5cdFx0b3B0aW9uLnN0YXRlcy5zd2l0Y2hJbnN0YW50ICdoaWRlJ1xuXG5cdCNTdGF0ZXMgZm9yIGZvb3RlclxuXHRmb290ZXIgPSBob3BbXCJmb290ZXJcIl1cblx0Zm9vdGVyLnN0YXRlcy5hZGQoJ2hpZGUnLCB7eToxNDAwLCBvcGFjaXR5OjB9KVxuXHRmb290ZXIuc3RhdGVzLmFkZCgnc2hvdycsIHt5OmZvb3Rlci55LCBvcGFjaXR5OjF9KVxuXHRmb290ZXIuc3RhdGVzLnN3aXRjaEluc3RhbnQgJ2hpZGUnXG5cdGV4cG9ydHMuc2hvd01lbnUoKVxuXG5leHBvcnRzLnNob3dNZW51ID0gLT5cblx0aG9wLk1haW5NZW51LnN0YXRlcy5zd2l0Y2goJ3Nob3cnKVxuXHRmb3IgY291bnQgaW4gWzEuLjhdXG5cdFx0ZG8gKGNvdW50KSAtPlxuXHRcdCAgIFV0aWxzLmRlbGF5IGNvdW50ICogMC4xLCAtPlxuXHRcdCAgICAgaG9wW1wib3B0aW9uXCIrY291bnRdLnN0YXRlcy5zd2l0Y2goJ3Nob3cnKVxuXG5cdFV0aWxzLmRlbGF5IDggKiAwLjEsIC0+IFxuXHRcdGhvcC5mb290ZXIuc3RhdGVzLnN3aXRjaCgnc2hvdycpXG5cdGhvcC5NYWluTWVudS5icmluZ1RvRnJvbnQoKVx0XG5cbmV4cG9ydHMuaGlkZU1lbnUgPSAtPlxuXHQjaG9wLk1haW5NZW51LmJhY2tncm91bmRDb2xvciA9ICcjZmZmZmZmJ1xuXHRmb3IgY291bnQgaW4gWzEuLjhdXG5cdFx0ZG8gKGNvdW50KSAtPlxuXHRcdCAgIFV0aWxzLmRlbGF5IGNvdW50ICogMC4wMSwgLT5cblx0XHQgICAgIGhvcFtcIm9wdGlvblwiK2NvdW50XS5zdGF0ZXMuc3dpdGNoKCdoaWRlJylcblx0VXRpbHMuZGVsYXkgOCAqIDAuMDEsIC0+IFxuXHRcdGhvcC5mb290ZXIuc3RhdGVzLnN3aXRjaCgnaGlkZScpXG5cdFx0aG9wLk1haW5NZW51LnN0YXRlcy5zd2l0Y2goJ2hpZGUnKVxuXG4jIEV2ZW50c1xuaG9wLm9wdGlvbjIub24gRXZlbnRzLkNsaWNrLCAoZXZlbnQsbGF5ZXIpIC0+XG5cdHdpbmRvdy5zaG9wTm93TW9kLnNob3dTaG9wTm93KClcblx0ZXhwb3J0cy5oaWRlTWVudSgpXG5cbmhvcC5vcHRpb24zLm9uIEV2ZW50cy5DbGljaywgKGV2ZW50LGxheWVyKSAtPlxuXHR3aW5kb3cuc2hvcHBpbmdMaXN0TW9kLnNob3dTaG9wcGluZ0xpc3QoKVxuXHRleHBvcnRzLmhpZGVNZW51KClcblxuaG9wLm9wdGlvbjYub24gRXZlbnRzLkNsaWNrLCAoZXZlbnQsbGF5ZXIpIC0+XG5cdHdpbmRvdy5yZWNpcGVMaXN0TW9kLnNob3dSZWNpcGVMaXN0KClcblx0ZXhwb3J0cy5oaWRlTWVudSgpXG5cbmhvcC5vcHRpb243Lm9uIEV2ZW50cy5DbGljaywgKGV2ZW50LGxheWVyKSAtPlxuXHR3aW5kb3cubnV0cml0aW9uTW9kLnNob3dOdXRyaXRpb25MaXN0KClcblx0ZXhwb3J0cy5oaWRlTWVudSgpXG5cbiIsImV4cG9ydHMuaW5pdE51dHJpdGlvbkxpc3QgPSAtPlxuXHRcblx0aG9wLm51dHJpdGlvbkJvZHkuc3RhdGVzLmFkZFxuXHRcdGhpZGU6IFxuXHRcdFx0b3BhY2l0eTogMFxuXHRcdFx0c2NhbGU6IDAuNlxuXHRcdHNob3c6IFxuXHRcdFx0b3BhY2l0eTogMVxuXHRcdFx0c2NhbGU6IDFcblx0aG9wLm51dHJpdGlvbkJvZHkuc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXHRob3AuZ2xvYmFsRm9vdGVyLnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblxuXHRmb3IgY291bnQgaW4gWzEuLjJdXG5cdFx0aXRlbSA9IGhvcFsnbnV0cml0aW9uSXRlbScgKyBjb3VudF1cblx0XHRpdGVtLnN0YXRlcy5hZGQoJ3Nob3cnLHt5OiBpdGVtLnksIG9wYWNpdHk6MX0pXG5cdFx0aXRlbS5zdGF0ZXMuYWRkKCdoaWRlJyx7eTogKDEwMjQpLCBvcGFjaXR5OjB9KVxuXHRcdGl0ZW0uc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXG5leHBvcnRzLnNob3dOdXRyaXRpb25MaXN0ID0gLT5cblx0Zm9yIGNvdW50IGluIFsxLi4yXVxuXHRcdGhvcFtcIm51dHJpdGlvbkl0ZW1cIitjb3VudF0uc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXHRob3AuTnV0cml0aW9uLnBsYWNlQmVoaW5kKGhvcC5NYWluTWVudSlcblx0aG9wLk51dHJpdGlvbi52aXNpYmxlID0gdHJ1ZVxuXHRob3AubnV0cml0aW9uQm9keS5zdGF0ZXMuc3dpdGNoKCdzaG93Jylcblx0XG5cdFV0aWxzLmRlbGF5IDAuMiwgLT4gXG5cdFx0Zm9yIGNvdW50IGluIFsxLi4yXVxuXHRcdFx0ZG8gKGNvdW50KSAtPlxuXHRcdFx0ICAgVXRpbHMuZGVsYXkgY291bnQgKiAwLjEsIC0+XG5cdFx0XHQgICAgIGhvcFtcIm51dHJpdGlvbkl0ZW1cIitjb3VudF0uc3RhdGVzLnN3aXRjaCgnc2hvdycpXG5cdFV0aWxzLmRlbGF5IDAuNiwgLT5cblx0XHRob3AuZ2xvYmFsRm9vdGVyLnN0YXRlcy5zd2l0Y2goJ2RlZmF1bHQnKVx0XG5leHBvcnRzLmhpZGVOdXRyaXRpb25MaXN0ID0gLT5cblx0aG9wLm51dHJpdGlvbkJvZHkuc3RhdGVzLnN3aXRjaCgnaGlkZScpXG5cdGhvcC5nbG9iYWxGb290ZXIuc3RhdGVzLnN3aXRjaCgnaGlkZScpXG5cdFxuXG5cbiIsImV4cG9ydHMuaW5pdFJlY2lwZUxpc3QgPSAtPlxuXHRcblx0aG9wLnJlY2lwZUxpc3RCb2R5LnN0YXRlcy5hZGRcblx0XHRoaWRlOiBcblx0XHRcdG9wYWNpdHk6IDBcblx0XHRcdHNjYWxlOiAwLjZcblx0XHRzaG93OiBcblx0XHRcdG9wYWNpdHk6IDFcblx0XHRcdHNjYWxlOiAxXG5cdFxuXHRob3AucmVjaXBlTGlzdEJvZHkuc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXHRob3AuZ2xvYmFsRm9vdGVyLnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblxuXHRmb3IgY291bnQgaW4gWzEuLjVdXG5cdFx0aXRlbSA9IGhvcFsncmVjaXBlSXRlbScgKyBjb3VudF1cblx0XHRpdGVtLnN0YXRlcy5hZGQoJ3Nob3cnLHt5OiBpdGVtLnksIG9wYWNpdHk6MX0pXG5cdFx0aXRlbS5zdGF0ZXMuYWRkKCdoaWRlJyx7eTogKDEwMjQpLCBvcGFjaXR5OjB9KVxuXHRcdGl0ZW0uc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXHRcdGl0ZW0uc3RhdGVzLmFuaW1hdGlvbk9wdGlvbnMgPSB0aW1lOjAuNVxuXG5leHBvcnRzLnNob3dSZWNpcGVMaXN0ID0gLT5cblx0Zm9yIGNvdW50IGluIFsxLi41XVxuXHRcdGhvcFtcInJlY2lwZUl0ZW1cIitjb3VudF0uc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXG5cblx0aG9wLlJlY2lwZUxpc3QucGxhY2VCZWhpbmQoaG9wLk1haW5NZW51KVxuXHRob3AuUmVjaXBlTGlzdC52aXNpYmxlID0gdHJ1ZVxuXHRob3AucmVjaXBlTGlzdEJvZHkuc3RhdGVzLnN3aXRjaCgnc2hvdycpXG5cdGhvcC5nbG9iYWxGb290ZXIuc3RhdGVzLnN3aXRjaCgnZGVmYXVsdCcpXHRcblx0VXRpbHMuZGVsYXkgMC4yLCAtPiBcblx0XHRmb3IgY291bnQgaW4gWzEuLjVdXG5cdFx0XHRkbyAoY291bnQpIC0+XG5cdFx0XHQgICBVdGlscy5kZWxheSBjb3VudCAqIDAuMSwgLT5cblx0XHRcdCAgICAgaG9wW1wicmVjaXBlSXRlbVwiK2NvdW50XS5zdGF0ZXMuc3dpdGNoKCdzaG93JylcblxuZXhwb3J0cy5oaWRlUmVjaXBlTGlzdCA9IC0+XG5cdGhvcC5yZWNpcGVMaXN0Qm9keS5zdGF0ZXMuc3dpdGNoKCdoaWRlJylcblx0aG9wLmdsb2JhbEZvb3Rlci5zdGF0ZXMuc3dpdGNoKCdoaWRlJylcblx0XG5ob3AucmVjaXBlSXRlbTMub24gRXZlbnRzLkNsaWNrLCAoZXZlbnQsbGF5ZXIpIC0+XG5cdCNyZWNpcGVMYXllciA9IGhvcC5yZWNpcGVJbWcuY29weSgpXG5cdCNyZWNpcGVMYXllci5zdXBlckxheWVyID0gaG9wLnJlY2lwZUxpc3RCb2R5XG5cdFxuXHRob3AuU2NoZXp3YW5Ub2Z1LnZpc2libGUgPSB0cnVlXG5cdFxuXHRyZWNpcGVMYXllciA9IGhvcC5zY2hlendhbkJvZHlcblx0cmVjaXBlTGF5ZXIgPSBob3AuUmVjaXBlQ292ZXJJbWcuY29weSgpXG5cdHJlY2lwZUxheWVyLnN1cGVyTGF5ZXIgPSBob3AuUmVjaXBlTGlzdFxuXHRyZWNpcGVMYXllci53aWR0aCA9IGhvcC5yZWNpcGVJbWcud2lkdGhcblx0cmVjaXBlTGF5ZXIuaGVpZ2h0ID0gaG9wLnJlY2lwZUltZy5oZWlnaHRcblx0cmVjaXBlTGF5ZXIueCA9IGhvcC5yZWNpcGVJbWcuc2NyZWVuRnJhbWUueFxuXHRyZWNpcGVMYXllci55ID0gaG9wLnJlY2lwZUltZy5zY3JlZW5GcmFtZS55XG5cdFxuXHRhbmltYXRpb25UaW1lID0gMC4zXG5cdHJlY2lwZUxheWVyLnN0YXRlcy5hZGRcblx0XHR6b29tSW46XG5cdFx0XHR3aWR0aDogNjQwXG5cdFx0XHRoZWlnaHQ6IDM5MVxuXHRcdFx0eDogMFxuXHRcdFx0eTogMTE1XG5cdFx0XHRvcmlnaW5YOiAwXG5cdFx0XHRvcmlnaW5ZOiAxXG5cdHJlY2lwZUxheWVyLnN0YXRlcy5hbmltYXRpb25PcHRpb25zID0gXG5cdFx0dGltZTogYW5pbWF0aW9uVGltZVxuXHRcdGN1cnZlOiBcImVhc2Utb3V0XCJcblx0cmVjaXBlTGF5ZXIuc3RhdGVzLnN3aXRjaCgnem9vbUluJylcblx0aG9wLnJlY2lwZUxpc3RCb2R5LnN0YXRlcy5zd2l0Y2goJ2hpZGUnKVxuXHRob3AuUmVjaXBlTGlzdC5iYWNrZ3JvdW5kQ29sb3IgPSBcIiNGRkZGRkZcIlxuXHRyZWNpcGVMYXllci5vbiBFdmVudHMuQW5pbWF0aW9uRW5kLCAtPiBcblx0XHRob3AuUmVjaXBlTGlzdC52aXNpYmxlID0gZmFsc2Vcblx0XHR3aW5kb3cuc2NoZXp3YW5Nb2Quc2hvd1NjaGV6d2FuVG9mdSgpXG5cdFx0cmVjaXBlTGF5ZXIuZGVzdHJveSgpXG5cblxuIiwiZXhwb3J0cy5pbml0U2NoZXp3YW5Ub2Z1ID0gLT5cblxuXHRob3AuU2NoZXp3YW5Ub2Z1LnN0YXRlcy5hZGRcblx0XHRoaWRlOiBcblx0XHRcdG9wYWNpdHk6IDBcblx0XHRcdHNjYWxlOiAwLjZcblx0XHRzaG93OiBcblx0XHRcdG9wYWNpdHk6IDFcblx0XHRcdHNjYWxlOiAxXG5cblx0aG9wLnNjaGV6d2FuQm9keS5zdGF0ZXMuYWRkXG5cdFx0aGlkZTogXG5cdFx0XHRvcGFjaXR5OiAwXG5cdFx0XHRzY2FsZTogMC42XG5cdFx0c2hvdzogXG5cdFx0XHRvcGFjaXR5OiAxXG5cdFx0XHRzY2FsZTogMVxuXG5cdGhvcC5pbmdyZWRpZW50cy5zdGF0ZXMuYWRkXG5cdFx0aGlkZTogXG5cdFx0XHRvcGFjaXR5OiAwXG5cdFx0XHR5OiAxMDAwXG5cdFx0c2hvdzogXG5cdFx0XHRvcGFjaXR5OiAxXG5cdFx0XHR5OiBob3AuaW5ncmVkaWVudHMueVxuXG5cdGhvcC5zY2hlendhblN1bW1hcnkuc3RhdGVzLmFkZFxuXHRcdGhpZGU6IFxuXHRcdFx0b3BhY2l0eTogMFxuXHRcdFx0c2NhbGVZOiAwXG5cdFx0c2hvdzogXG5cdFx0XHRvcGFjaXR5OiAxXG5cdFx0XHRzY2FsZVk6IDFcblx0XHRcdG9yaWdpblk6IDFcblx0aG9wLnNjaGV6d2FuU3VtbWFyeS5zdGF0ZXMuYW5pbWF0aW9uT3B0aW9ucyA9IFxuXHRcdGN1cnZlOiBcImVhc2Utb3V0XCJcblx0XHR0aW1lOiAwLjNcblxuXHRob3AuaW5ncmVkaWVudHMuc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVx0XG5cdGhvcC5zY2hlendhbkJvZHkuc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXHRob3AuZ2xvYmFsRm9vdGVyLnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblx0aG9wLnNjaGV6d2FuU3VtbWFyeS5zdGF0ZXMuc3dpdGNoSW5zdGFudCgnaGlkZScpXG5cdHNjcm9sbCA9IFNjcm9sbENvbXBvbmVudC53cmFwKGhvcC5zY2hlendhbkJvZHkpXG5cdHNjcm9sbC5zY3JvbGxGcmFtZSA9IFNjcmVlbi5mcmFtZVxuXHRzY3JvbGwuY29udGVudEluc2V0ID0gdG9wOiAwLCBsZWZ0OiAwLCBib3R0b206IC0yMDBcblx0c2Nyb2xsLnNjcm9sbEhvcml6b250YWwgPSBmYWxzZVxuXHRzY3JvbGwuc3RhdGVzLmFkZFxuXHRcdGhpZGU6IFxuXHRcdFx0b3BhY2l0eTogMFxuXHRcdFx0c2NhbGU6IDAuNlxuXHRcdHNob3c6IFxuXHRcdFx0b3BhY2l0eTogMVxuXHRcdFx0c2NhbGU6IDFcblx0c2Nyb2xsLm9uIEV2ZW50cy5Nb3ZlLCAtPlxuXHRcdHBhcmFsbGF4Q292ZXIoc2Nyb2xsLnNjcm9sbFkpXG5cdFxuXG5leHBvcnRzLnNob3dTY2hlendhblRvZnUgPSAtPlxuXHRob3AuU2NoZXp3YW5Ub2Z1LnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdzaG93Jylcblx0aG9wLmluZ3JlZGllbnRzLnN0YXRlcy5zd2l0Y2goJ3Nob3cnKVxuXHRob3Auc2NoZXp3YW5TdW1tYXJ5LnN0YXRlcy5zd2l0Y2goJ3Nob3cnKVxuXG5cblx0XHRcblx0XHRcblxucGFyYWxsYXhDb3ZlciA9ICh5KSAtPlxuXHRob3AuUmVjaXBlQ292ZXJJbWcueSA9IFV0aWxzLm1vZHVsYXRlKHksIFswLCAzOTBdLCBbMCwgMTAwXSwgdHJ1ZSlcblx0aG9wLlJlY2lwZUNvdmVySW1nLmJsdXIgPSBVdGlscy5tb2R1bGF0ZSh5LCBbMCwgNDAwXSwgWzAsIDIwXSwgdHJ1ZSlcblxuZXhwb3J0cy5oaWRlU2NoZXp3YW5Ub2Z1ID0gLT5cblx0aG9wLlNjaGV6d2FuVG9mdS5zdGF0ZXMuc3dpdGNoKCdoaWRlJylcblx0aG9wLmluZ3JlZGllbnRzLnN0YXRlcy5zd2l0Y2goJ2hpZGUnKVxuXHRob3Auc2NoZXp3YW5TdW1tYXJ5LnN0YXRlcy5zd2l0Y2goJ2hpZGUnKVxuXHRob3AuZ2xvYmFsRm9vdGVyLnN0YXRlcy5zd2l0Y2goJ2hpZGUnKVxuXHRcblxuXG4iLCIjIEFkZCB0aGUgZm9sbG93aW5nIGxpbmUgdG8geW91ciBwcm9qZWN0IGluIEZyYW1lciBTdHVkaW8uIFxuIyBteU1vZHVsZSA9IHJlcXVpcmUgXCJteU1vZHVsZVwiXG4jIFJlZmVyZW5jZSB0aGUgY29udGVudHMgYnkgbmFtZSwgbGlrZSBteU1vZHVsZS5teUZ1bmN0aW9uKCkgb3IgbXlNb2R1bGUubXlWYXJcblxuXG5leHBvcnRzLmluaXRTaG9wTm93ID0gLT5cblx0XG5cdGhvcC5zaG9wTm93Qm9keS5zdGF0ZXMuYWRkXG5cdFx0aGlkZTogXG5cdFx0XHRvcGFjaXR5OiAwXG5cdFx0XHRzY2FsZTogMC42XG5cdFx0c2hvdzogXG5cdFx0XHRvcGFjaXR5OiAxXG5cdFx0XHRzY2FsZTogMVxuXHRob3AubWFwLnN0YXRlcy5hZGRcblx0XHRoaWRlOlxuXHRcdFx0b3BhY2l0eTogMFxuXHRcdFx0c2NhbGU6IDAuNlxuXHRcdHNob3c6IFxuXHRcdFx0b3BhY2l0eTogMVxuXHRcdFx0c2NhbGU6IDFcblx0XHRcdGN1cnZlOiAnZWFzZS1vdXQnXHRcblxuXHRob3AubWFwLnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblx0aG9wLnNob3BOb3dCb2R5LnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblx0aG9wLmdsb2JhbEZvb3Rlci5zdGF0ZXMuc3dpdGNoSW5zdGFudCgnaGlkZScpXG5cblx0Zm9yIGNvdW50IGluIFsxLi41XVxuXHRcdGl0ZW0gPSBob3BbJ3Nob3BJdGVtJyArIGNvdW50XVxuXHRcdGl0ZW0uc3RhdGVzLmFkZCgnc2hvdycse3k6IGl0ZW0ueSwgb3BhY2l0eToxfSlcblx0XHRpdGVtLnN0YXRlcy5hZGQoJ2hpZGUnLHt5OiAoMTIwMCksIG9wYWNpdHk6MH0pXG5cdFx0aXRlbS5zdGF0ZXMuc3dpdGNoSW5zdGFudCAnaGlkZSdcblxuZXhwb3J0cy5zaG93U2hvcE5vdyA9IC0+XG5cdGZvciBjb3VudCBpbiBbMS4uNV1cblx0XHRob3BbXCJzaG9wSXRlbVwiK2NvdW50XS5zdGF0ZXMuc3dpdGNoSW5zdGFudCgnaGlkZScpXG5cdGhvcC5tYXAuc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXHRob3AuU2hvcE5vdy5wbGFjZUJlaGluZChob3AuTWFpbk1lbnUpXG5cdGhvcC5TaG9wTm93LnZpc2libGUgPSB0cnVlXG5cdGhvcC5zaG9wTm93Qm9keS5zdGF0ZXMuc3dpdGNoKCdzaG93JylcdFxuXHRob3AuZ2xvYmFsRm9vdGVyLnN0YXRlcy5zd2l0Y2goJ2RlZmF1bHQnKVx0XG5cdFV0aWxzLmRlbGF5IDAuMiwgLT4gXG5cdFx0aG9wLm1hcC5zdGF0ZXMuc3dpdGNoKCdzaG93Jylcblx0XHRmb3IgY291bnQgaW4gWzEuLjVdXG5cdFx0XHRkbyAoY291bnQpIC0+XG5cdFx0XHQgICBVdGlscy5kZWxheSBjb3VudCAqIDAuMSwgLT5cblx0XHRcdCAgICAgaG9wW1wic2hvcEl0ZW1cIitjb3VudF0uc3RhdGVzLnN3aXRjaCgnc2hvdycpXG5leHBvcnRzLmhpZGVTaG9wTm93ID0gLT5cblx0XG5cdGhvcC5nbG9iYWxGb290ZXIuc3RhdGVzLnN3aXRjaCgnaGlkZScpXG5cdGhvcC5zaG9wTm93Qm9keS5zdGF0ZXMuc3dpdGNoKCdoaWRlJylcblxuXG5cblxuXG5cblxuIiwiIyBBZGQgdGhlIGZvbGxvd2luZyBsaW5lIHRvIHlvdXIgcHJvamVjdCBpbiBGcmFtZXIgU3R1ZGlvLiBcbiMgbXlNb2R1bGUgPSByZXF1aXJlIFwibXlNb2R1bGVcIlxuIyBSZWZlcmVuY2UgdGhlIGNvbnRlbnRzIGJ5IG5hbWUsIGxpa2UgbXlNb2R1bGUubXlGdW5jdGlvbigpIG9yIG15TW9kdWxlLm15VmFyXG5cblxuZXhwb3J0cy5pbml0U2hvcHBpbmdMaXN0ID0gLT5cblx0XG5cdGhvcC5zaG9wcGluZ0xpc3RCb2R5LnN0YXRlcy5hZGRcblx0XHRoaWRlOiBcblx0XHRcdG9wYWNpdHk6IDBcblx0XHRcdHNjYWxlOiAwLjZcblx0XHRzaG93OiBcblx0XHRcdG9wYWNpdHk6IDFcblx0XHRcdHNjYWxlOiAxXG5cdFxuXHRob3Auc2hvcHBpbmdMaXN0Qm9keS5zdGF0ZXMuc3dpdGNoSW5zdGFudCgnaGlkZScpXG5cdGhvcC5nbG9iYWxGb290ZXIuc3RhdGVzLnN3aXRjaEluc3RhbnQoJ2hpZGUnKVxuXG5cdGZvciBjb3VudCBpbiBbMS4uNV1cblx0XHRpdGVtID0gaG9wWydsaXN0SXRlbScgKyBjb3VudF1cblx0XHRpdGVtLnN0YXRlcy5hZGQoJ3Nob3cnLHt5OiBpdGVtLnksIG9wYWNpdHk6MX0pXG5cdFx0aXRlbS5zdGF0ZXMuYWRkKCdoaWRlJyx7eTogMTIwMCwgb3BhY2l0eTowfSlcblx0XHRpdGVtLnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblxuZXhwb3J0cy5zaG93U2hvcHBpbmdMaXN0ID0gLT5cblx0Zm9yIGNvdW50IGluIFsxLi41XVxuXHRcdGhvcFtcImxpc3RJdGVtXCIrY291bnRdLnN0YXRlcy5zd2l0Y2hJbnN0YW50KCdoaWRlJylcblx0aG9wLlNob3BwaW5nTGlzdC5wbGFjZUJlaGluZChob3AuTWFpbk1lbnUpXG5cdGhvcC5TaG9wcGluZ0xpc3QudmlzaWJsZSA9IHRydWVcblx0aG9wLnNob3BwaW5nTGlzdEJvZHkuc3RhdGVzLnN3aXRjaCgnc2hvdycpXHRcblx0aG9wLmdsb2JhbEZvb3Rlci5zdGF0ZXMuc3dpdGNoKCdkZWZhdWx0JylcdFxuXHRVdGlscy5kZWxheSAwLjIsIC0+IFxuXHRcdGZvciBjb3VudCBpbiBbMS4uNV1cblx0XHRcdGRvIChjb3VudCkgLT5cblx0XHRcdCAgIFV0aWxzLmRlbGF5IGNvdW50ICogMC4xLCAtPlxuXHRcdFx0ICAgICBob3BbXCJsaXN0SXRlbVwiK2NvdW50XS5zdGF0ZXMuc3dpdGNoKCdzaG93JylcblxuZXhwb3J0cy5oaWRlU2hvcHBpbmdMaXN0ID0gLT5cblx0aG9wLmdsb2JhbEZvb3Rlci5zdGF0ZXMuc3dpdGNoKCdoaWRlJylcblx0aG9wLnNob3BwaW5nTGlzdEJvZHkuc3RhdGVzLnN3aXRjaCgnaGlkZScpXG5cblxuXG5cblxuXG5cbiJdfQ==
