require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"global":[function(require,module,exports){
exports.initGlobal = function() {
  exports.initBack();
  return hop.Global.visible = true;
};

exports.initBack = function() {
  return hop.back.on(Events.Click, function(event, layer) {
    window.shopNowMod.hideShopNow();
    return window.mainMenuMod.showMenu();
  });
};



},{}],"mainMenu":[function(require,module,exports){
exports.initMenu = function() {
  var count, footer, i, option;
  hop.MainMenu.y = 0;
  hop.MainMenu.states.add('hide', {
    opacity: 0
  });
  hop.MainMenu.states.add('show', {
    opacity: 1
  });
  hop.MainMenu.bringToFront();
  hop.Global.bringToFront();
  for (count = i = 1; i <= 8; count = ++i) {
    option = hop["option" + count];
    option.states.add("show", {
      y: option.y,
      opacity: 1
    });
    option.states.add("hide", {
      y: 1200,
      opacity: 0
    });
    option.states.switchInstant('hide');
  }
  footer = hop["footer"];
  footer.states.add('hide', {
    y: 1400,
    opacity: 0
  });
  footer.states.add('show', {
    y: footer.y,
    opacity: 1
  });
  footer.states.switchInstant('hide');
  return exports.showMenu();
};

exports.showMenu = function() {
  var count, fn, i;
  hop.MainMenu.states["switch"]('show');
  fn = function(count) {
    return Utils.delay(count * 0.1, function() {
      return hop["option" + count].states["switch"]('show');
    });
  };
  for (count = i = 1; i <= 8; count = ++i) {
    fn(count);
  }
  return Utils.delay(8 * 0.1, function() {
    return hop.footer.states["switch"]('show');
  });
};

exports.hideMenu = function() {
  var count, fn, i;
  fn = function(count) {
    return Utils.delay(count * 0.01, function() {
      return hop["option" + count].states["switch"]('hide');
    });
  };
  for (count = i = 1; i <= 8; count = ++i) {
    fn(count);
  }
  return Utils.delay(8 * 0.01, function() {
    hop.footer.states["switch"]('hide');
    return hop.MainMenu.states["switch"]('hide');
  });
};

hop.option1.on(Events.Click, function(event, layer) {
  window.shopNowMod.showShopNow();
  window.globalMod.initGlobal();
  return exports.hideMenu();
});



},{}],"shopNow":[function(require,module,exports){
exports.initShopNow = function() {
  var count, i, item, results;
  hop.shopNowBody.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1
    }
  });
  hop.map.states.add({
    hide: {
      opacity: 0,
      scale: 0.6
    },
    show: {
      opacity: 1,
      scale: 1,
      curve: 'ease-out'
    }
  });
  hop.globalFooter.states.add({
    hide: {
      y: 1200
    }
  });
  hop.map.states.switchInstant('hide');
  hop.shopNowBody.states.switchInstant('hide');
  hop.globalFooter.states.switchInstant('hide');
  results = [];
  for (count = i = 1; i <= 5; count = ++i) {
    item = hop['shopItem' + count];
    item.states.add('show', {
      y: item.y,
      opacity: 1
    });
    item.states.add('hide', {
      y: item.y - 40,
      opacity: 0
    });
    results.push(item.states.switchInstant('hide'));
  }
  return results;
};

exports.showShopNow = function() {
  hop.ShopNow.visible = true;
  hop.shopNowBody.states["switch"]('show');
  hop.globalFooter.states["switch"]('default');
  Utils.delay(0.2, function() {
    var count, i, results;
    hop.map.states["switch"]('show');
    results = [];
    for (count = i = 1; i <= 5; count = ++i) {
      results.push((function(count) {
        return Utils.delay(count * 0.2, function() {
          return hop["shopItem" + count].states["switch"]('show');
        });
      })(count));
    }
    return results;
  });
  return Utils.delay(1.2, function() {
    return hop.ShopNow.bringToFront();
  });
};

exports.hideShopNow = function() {
  var count, fn, i;
  hop.map.states["switch"]('hide');
  hop.globalFooter.states["switch"]('hide');
  fn = function(count) {
    return Utils.delay(count * 0.2, function() {
      return hop["shopItem" + count].states["switch"]('hide');
    });
  };
  for (count = i = 1; i <= 5; count = ++i) {
    fn(count);
  }
  return hop.shopNowBody.states["switch"]('hide');
};



},{}]},{},[])
//# sourceMappingURL=data:application/json;base64,
